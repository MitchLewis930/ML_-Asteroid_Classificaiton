{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":7956093,"sourceType":"datasetVersion","datasetId":4679579}],"dockerImageVersionId":30673,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# NASA Asteroid Classification\n\nThis project uses machine learning techniques to analyze a NASA dataset on asteroids. The data includes several characteristics of previously recorded asteroids, including whether they were classified as hazerdous or not. This presents an opportunity to use supervised learning to create a model that can classify asteroids as hazardous. This type of classification may be important for NASA or other space agencies to utilize when they detect new asteroids, helping them quickly determine a potential threat and respond accordingly.\n\nThe dataset used in this project was downloaded from Kaggle and can be found here: https://www.kaggle.com/datasets/lovishbansal123/nasa-asteroids-classification/data\n\nThe original data is sourced from NASA: http://neo.jpl.nasa.gov/\n","metadata":{}},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nimport seaborn as sns\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-04-20T18:38:42.821197Z","iopub.execute_input":"2024-04-20T18:38:42.821593Z","iopub.status.idle":"2024-04-20T18:38:44.648218Z","shell.execute_reply.started":"2024-04-20T18:38:42.821561Z","shell.execute_reply":"2024-04-20T18:38:44.646869Z"},"jupyter":{"source_hidden":true},"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"/kaggle/input/nasa-asteroids-classification/nasa.csv\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## Data Exploration and Cleaning","metadata":{}},{"cell_type":"code","source":"nasa = pd.read_csv('/kaggle/input/nasa-asteroids-classification/nasa.csv')\nnasa.info()","metadata":{"execution":{"iopub.status.busy":"2024-04-20T18:38:44.650631Z","iopub.execute_input":"2024-04-20T18:38:44.651113Z","iopub.status.idle":"2024-04-20T18:38:44.773948Z","shell.execute_reply.started":"2024-04-20T18:38:44.651082Z","shell.execute_reply":"2024-04-20T18:38:44.772840Z"},"trusted":true},"execution_count":4,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 4687 entries, 0 to 4686\nData columns (total 40 columns):\n #   Column                        Non-Null Count  Dtype  \n---  ------                        --------------  -----  \n 0   Neo Reference ID              4687 non-null   int64  \n 1   Name                          4687 non-null   int64  \n 2   Absolute Magnitude            4687 non-null   float64\n 3   Est Dia in KM(min)            4687 non-null   float64\n 4   Est Dia in KM(max)            4687 non-null   float64\n 5   Est Dia in M(min)             4687 non-null   float64\n 6   Est Dia in M(max)             4687 non-null   float64\n 7   Est Dia in Miles(min)         4687 non-null   float64\n 8   Est Dia in Miles(max)         4687 non-null   float64\n 9   Est Dia in Feet(min)          4687 non-null   float64\n 10  Est Dia in Feet(max)          4687 non-null   float64\n 11  Close Approach Date           4687 non-null   object \n 12  Epoch Date Close Approach     4687 non-null   int64  \n 13  Relative Velocity km per sec  4687 non-null   float64\n 14  Relative Velocity km per hr   4687 non-null   float64\n 15  Miles per hour                4687 non-null   float64\n 16  Miss Dist.(Astronomical)      4687 non-null   float64\n 17  Miss Dist.(lunar)             4687 non-null   float64\n 18  Miss Dist.(kilometers)        4687 non-null   float64\n 19  Miss Dist.(miles)             4687 non-null   float64\n 20  Orbiting Body                 4687 non-null   object \n 21  Orbit ID                      4687 non-null   int64  \n 22  Orbit Determination Date      4687 non-null   object \n 23  Orbit Uncertainity            4687 non-null   int64  \n 24  Minimum Orbit Intersection    4687 non-null   float64\n 25  Jupiter Tisserand Invariant   4687 non-null   float64\n 26  Epoch Osculation              4687 non-null   float64\n 27  Eccentricity                  4687 non-null   float64\n 28  Semi Major Axis               4687 non-null   float64\n 29  Inclination                   4687 non-null   float64\n 30  Asc Node Longitude            4687 non-null   float64\n 31  Orbital Period                4687 non-null   float64\n 32  Perihelion Distance           4687 non-null   float64\n 33  Perihelion Arg                4687 non-null   float64\n 34  Aphelion Dist                 4687 non-null   float64\n 35  Perihelion Time               4687 non-null   float64\n 36  Mean Anomaly                  4687 non-null   float64\n 37  Mean Motion                   4687 non-null   float64\n 38  Equinox                       4687 non-null   object \n 39  Hazardous                     4687 non-null   bool   \ndtypes: bool(1), float64(30), int64(5), object(4)\nmemory usage: 1.4+ MB\n","output_type":"stream"}]},{"cell_type":"code","source":"nasa.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-20T18:38:44.775532Z","iopub.execute_input":"2024-04-20T18:38:44.776095Z","iopub.status.idle":"2024-04-20T18:38:44.815219Z","shell.execute_reply.started":"2024-04-20T18:38:44.776054Z","shell.execute_reply":"2024-04-20T18:38:44.813893Z"},"trusted":true},"execution_count":5,"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"   Neo Reference ID     Name  Absolute Magnitude  Est Dia in KM(min)  \\\n0           3703080  3703080                21.6            0.127220   \n1           3723955  3723955                21.3            0.146068   \n2           2446862  2446862                20.3            0.231502   \n3           3092506  3092506                27.4            0.008801   \n4           3514799  3514799                21.6            0.127220   \n\n   Est Dia in KM(max)  Est Dia in M(min)  Est Dia in M(max)  \\\n0            0.284472         127.219879         284.472297   \n1            0.326618         146.067964         326.617897   \n2            0.517654         231.502122         517.654482   \n3            0.019681           8.801465          19.680675   \n4            0.284472         127.219879         284.472297   \n\n   Est Dia in Miles(min)  Est Dia in Miles(max)  Est Dia in Feet(min)  ...  \\\n0               0.079051               0.176763            417.388066  ...   \n1               0.090762               0.202951            479.225620  ...   \n2               0.143849               0.321655            759.521423  ...   \n3               0.005469               0.012229             28.876199  ...   \n4               0.079051               0.176763            417.388066  ...   \n\n   Asc Node Longitude Orbital Period  Perihelion Distance  Perihelion Arg  \\\n0          314.373913     609.599786             0.808259       57.257470   \n1          136.717242     425.869294             0.718200      313.091975   \n2          259.475979     643.580228             0.950791      248.415038   \n3           57.173266     514.082140             0.983902       18.707701   \n4           84.629307     495.597821             0.967687      158.263596   \n\n   Aphelion Dist  Perihelion Time  Mean Anomaly  Mean Motion  Equinox  \\\n0       2.005764     2.458162e+06    264.837533     0.590551    J2000   \n1       1.497352     2.457795e+06    173.741112     0.845330    J2000   \n2       1.966857     2.458120e+06    292.893654     0.559371    J2000   \n3       1.527904     2.457902e+06     68.741007     0.700277    J2000   \n4       1.483543     2.457814e+06    135.142133     0.726395    J2000   \n\n   Hazardous  \n0       True  \n1      False  \n2       True  \n3      False  \n4       True  \n\n[5 rows x 40 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Neo Reference ID</th>\n      <th>Name</th>\n      <th>Absolute Magnitude</th>\n      <th>Est Dia in KM(min)</th>\n      <th>Est Dia in KM(max)</th>\n      <th>Est Dia in M(min)</th>\n      <th>Est Dia in M(max)</th>\n      <th>Est Dia in Miles(min)</th>\n      <th>Est Dia in Miles(max)</th>\n      <th>Est Dia in Feet(min)</th>\n      <th>...</th>\n      <th>Asc Node Longitude</th>\n      <th>Orbital Period</th>\n      <th>Perihelion Distance</th>\n      <th>Perihelion Arg</th>\n      <th>Aphelion Dist</th>\n      <th>Perihelion Time</th>\n      <th>Mean Anomaly</th>\n      <th>Mean Motion</th>\n      <th>Equinox</th>\n      <th>Hazardous</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>3703080</td>\n      <td>3703080</td>\n      <td>21.6</td>\n      <td>0.127220</td>\n      <td>0.284472</td>\n      <td>127.219879</td>\n      <td>284.472297</td>\n      <td>0.079051</td>\n      <td>0.176763</td>\n      <td>417.388066</td>\n      <td>...</td>\n      <td>314.373913</td>\n      <td>609.599786</td>\n      <td>0.808259</td>\n      <td>57.257470</td>\n      <td>2.005764</td>\n      <td>2.458162e+06</td>\n      <td>264.837533</td>\n      <td>0.590551</td>\n      <td>J2000</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>3723955</td>\n      <td>3723955</td>\n      <td>21.3</td>\n      <td>0.146068</td>\n      <td>0.326618</td>\n      <td>146.067964</td>\n      <td>326.617897</td>\n      <td>0.090762</td>\n      <td>0.202951</td>\n      <td>479.225620</td>\n      <td>...</td>\n      <td>136.717242</td>\n      <td>425.869294</td>\n      <td>0.718200</td>\n      <td>313.091975</td>\n      <td>1.497352</td>\n      <td>2.457795e+06</td>\n      <td>173.741112</td>\n      <td>0.845330</td>\n      <td>J2000</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2446862</td>\n      <td>2446862</td>\n      <td>20.3</td>\n      <td>0.231502</td>\n      <td>0.517654</td>\n      <td>231.502122</td>\n      <td>517.654482</td>\n      <td>0.143849</td>\n      <td>0.321655</td>\n      <td>759.521423</td>\n      <td>...</td>\n      <td>259.475979</td>\n      <td>643.580228</td>\n      <td>0.950791</td>\n      <td>248.415038</td>\n      <td>1.966857</td>\n      <td>2.458120e+06</td>\n      <td>292.893654</td>\n      <td>0.559371</td>\n      <td>J2000</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3092506</td>\n      <td>3092506</td>\n      <td>27.4</td>\n      <td>0.008801</td>\n      <td>0.019681</td>\n      <td>8.801465</td>\n      <td>19.680675</td>\n      <td>0.005469</td>\n      <td>0.012229</td>\n      <td>28.876199</td>\n      <td>...</td>\n      <td>57.173266</td>\n      <td>514.082140</td>\n      <td>0.983902</td>\n      <td>18.707701</td>\n      <td>1.527904</td>\n      <td>2.457902e+06</td>\n      <td>68.741007</td>\n      <td>0.700277</td>\n      <td>J2000</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>3514799</td>\n      <td>3514799</td>\n      <td>21.6</td>\n      <td>0.127220</td>\n      <td>0.284472</td>\n      <td>127.219879</td>\n      <td>284.472297</td>\n      <td>0.079051</td>\n      <td>0.176763</td>\n      <td>417.388066</td>\n      <td>...</td>\n      <td>84.629307</td>\n      <td>495.597821</td>\n      <td>0.967687</td>\n      <td>158.263596</td>\n      <td>1.483543</td>\n      <td>2.457814e+06</td>\n      <td>135.142133</td>\n      <td>0.726395</td>\n      <td>J2000</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 40 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"Overall the data looks like it has been cleaned fairly well, and luckily there are no Null values that we need to take care of.\n\nThere are, however, plenty of redundant columns that can be removed. The reference ID and Name appear to be the same, so we don't need to keep both. Additionally, distance metrics have been given in several different measurements. These are unneccessary, and will be correlated, so they may end up skewing data training. For this analysis we will work with KM data and drop the others.","metadata":{"execution":{"iopub.status.busy":"2024-04-07T23:19:59.618477Z","iopub.execute_input":"2024-04-07T23:19:59.618876Z","iopub.status.idle":"2024-04-07T23:19:59.625937Z","shell.execute_reply.started":"2024-04-07T23:19:59.618846Z","shell.execute_reply":"2024-04-07T23:19:59.624460Z"}}},{"cell_type":"code","source":"columns_to_drop = ['Name', 'Est Dia in M(min)', 'Est Dia in M(max)', 'Est Dia in Miles(min)', 'Est Dia in Miles(max)',\n                   'Est Dia in Feet(min)', 'Est Dia in Feet(max)', 'Relative Velocity km per sec', 'Miles per hour',\n                   'Miss Dist.(Astronomical)', 'Miss Dist.(lunar)', 'Miss Dist.(miles)']\n\nnasa.drop(columns = columns_to_drop, inplace = True)\n\nnasa.info()","metadata":{"execution":{"iopub.status.busy":"2024-04-20T18:38:44.817941Z","iopub.execute_input":"2024-04-20T18:38:44.818349Z","iopub.status.idle":"2024-04-20T18:38:44.838790Z","shell.execute_reply.started":"2024-04-20T18:38:44.818314Z","shell.execute_reply":"2024-04-20T18:38:44.837499Z"},"trusted":true},"execution_count":6,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 4687 entries, 0 to 4686\nData columns (total 28 columns):\n #   Column                       Non-Null Count  Dtype  \n---  ------                       --------------  -----  \n 0   Neo Reference ID             4687 non-null   int64  \n 1   Absolute Magnitude           4687 non-null   float64\n 2   Est Dia in KM(min)           4687 non-null   float64\n 3   Est Dia in KM(max)           4687 non-null   float64\n 4   Close Approach Date          4687 non-null   object \n 5   Epoch Date Close Approach    4687 non-null   int64  \n 6   Relative Velocity km per hr  4687 non-null   float64\n 7   Miss Dist.(kilometers)       4687 non-null   float64\n 8   Orbiting Body                4687 non-null   object \n 9   Orbit ID                     4687 non-null   int64  \n 10  Orbit Determination Date     4687 non-null   object \n 11  Orbit Uncertainity           4687 non-null   int64  \n 12  Minimum Orbit Intersection   4687 non-null   float64\n 13  Jupiter Tisserand Invariant  4687 non-null   float64\n 14  Epoch Osculation             4687 non-null   float64\n 15  Eccentricity                 4687 non-null   float64\n 16  Semi Major Axis              4687 non-null   float64\n 17  Inclination                  4687 non-null   float64\n 18  Asc Node Longitude           4687 non-null   float64\n 19  Orbital Period               4687 non-null   float64\n 20  Perihelion Distance          4687 non-null   float64\n 21  Perihelion Arg               4687 non-null   float64\n 22  Aphelion Dist                4687 non-null   float64\n 23  Perihelion Time              4687 non-null   float64\n 24  Mean Anomaly                 4687 non-null   float64\n 25  Mean Motion                  4687 non-null   float64\n 26  Equinox                      4687 non-null   object \n 27  Hazardous                    4687 non-null   bool   \ndtypes: bool(1), float64(19), int64(4), object(4)\nmemory usage: 993.4+ KB\n","output_type":"stream"}]},{"cell_type":"markdown","source":"We also need to deal with the object categories. One approach would be to use dummy variables with an approach like one-hot encoding, or we could drop the columns. Looking at the object columns, there are a few date columns - these will be difficult to encode since they have so many unique values, and they aren't likely to provide much value - we will drop these.\n\nThe other object values are 'Orbiting Body' and 'Equinox' - these both only have a single value (we're only looking at data about Earth) - so we will drop these as well.","metadata":{}},{"cell_type":"code","source":"object_columns = ['Close Approach Date', 'Epoch Date Close Approach', 'Orbit Determination Date', 'Orbiting Body', 'Equinox']\nnasa.drop(columns = object_columns, inplace = True)\n\nnasa.info()","metadata":{"execution":{"iopub.status.busy":"2024-04-20T18:38:44.842210Z","iopub.execute_input":"2024-04-20T18:38:44.842581Z","iopub.status.idle":"2024-04-20T18:38:44.858818Z","shell.execute_reply.started":"2024-04-20T18:38:44.842549Z","shell.execute_reply":"2024-04-20T18:38:44.857514Z"},"trusted":true},"execution_count":7,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 4687 entries, 0 to 4686\nData columns (total 23 columns):\n #   Column                       Non-Null Count  Dtype  \n---  ------                       --------------  -----  \n 0   Neo Reference ID             4687 non-null   int64  \n 1   Absolute Magnitude           4687 non-null   float64\n 2   Est Dia in KM(min)           4687 non-null   float64\n 3   Est Dia in KM(max)           4687 non-null   float64\n 4   Relative Velocity km per hr  4687 non-null   float64\n 5   Miss Dist.(kilometers)       4687 non-null   float64\n 6   Orbit ID                     4687 non-null   int64  \n 7   Orbit Uncertainity           4687 non-null   int64  \n 8   Minimum Orbit Intersection   4687 non-null   float64\n 9   Jupiter Tisserand Invariant  4687 non-null   float64\n 10  Epoch Osculation             4687 non-null   float64\n 11  Eccentricity                 4687 non-null   float64\n 12  Semi Major Axis              4687 non-null   float64\n 13  Inclination                  4687 non-null   float64\n 14  Asc Node Longitude           4687 non-null   float64\n 15  Orbital Period               4687 non-null   float64\n 16  Perihelion Distance          4687 non-null   float64\n 17  Perihelion Arg               4687 non-null   float64\n 18  Aphelion Dist                4687 non-null   float64\n 19  Perihelion Time              4687 non-null   float64\n 20  Mean Anomaly                 4687 non-null   float64\n 21  Mean Motion                  4687 non-null   float64\n 22  Hazardous                    4687 non-null   bool   \ndtypes: bool(1), float64(19), int64(3)\nmemory usage: 810.3 KB\n","output_type":"stream"}]},{"cell_type":"code","source":"nasa.drop(columns = 'Neo Reference ID', inplace = True)","metadata":{"execution":{"iopub.status.busy":"2024-04-20T18:38:44.860948Z","iopub.execute_input":"2024-04-20T18:38:44.861499Z","iopub.status.idle":"2024-04-20T18:38:44.868975Z","shell.execute_reply.started":"2024-04-20T18:38:44.861441Z","shell.execute_reply":"2024-04-20T18:38:44.867618Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"markdown","source":"We want to look at whether or not asteroids are hazardous, using the remaining columns. So we will split the 'Hazardous' column out as the y data and keep the remaining columns as our x data.","metadata":{}},{"cell_type":"code","source":"nasa[\"Hazardous\"] = nasa[\"Hazardous\"].astype(int)\n\nnasa.info()","metadata":{"execution":{"iopub.status.busy":"2024-04-20T22:51:44.211063Z","iopub.execute_input":"2024-04-20T22:51:44.211572Z","iopub.status.idle":"2024-04-20T22:51:44.231513Z","shell.execute_reply.started":"2024-04-20T22:51:44.211536Z","shell.execute_reply":"2024-04-20T22:51:44.230177Z"},"trusted":true},"execution_count":86,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 4687 entries, 0 to 4686\nData columns (total 22 columns):\n #   Column                       Non-Null Count  Dtype  \n---  ------                       --------------  -----  \n 0   Absolute Magnitude           4687 non-null   float64\n 1   Est Dia in KM(min)           4687 non-null   float64\n 2   Est Dia in KM(max)           4687 non-null   float64\n 3   Relative Velocity km per hr  4687 non-null   float64\n 4   Miss Dist.(kilometers)       4687 non-null   float64\n 5   Orbit ID                     4687 non-null   float64\n 6   Orbit Uncertainity           4687 non-null   float64\n 7   Minimum Orbit Intersection   4687 non-null   float64\n 8   Jupiter Tisserand Invariant  4687 non-null   float64\n 9   Epoch Osculation             4687 non-null   float64\n 10  Eccentricity                 4687 non-null   float64\n 11  Semi Major Axis              4687 non-null   float64\n 12  Inclination                  4687 non-null   float64\n 13  Asc Node Longitude           4687 non-null   float64\n 14  Orbital Period               4687 non-null   float64\n 15  Perihelion Distance          4687 non-null   float64\n 16  Perihelion Arg               4687 non-null   float64\n 17  Aphelion Dist                4687 non-null   float64\n 18  Perihelion Time              4687 non-null   float64\n 19  Mean Anomaly                 4687 non-null   float64\n 20  Mean Motion                  4687 non-null   float64\n 21  Hazardous                    4687 non-null   int64  \ndtypes: float64(21), int64(1)\nmemory usage: 805.7 KB\n","output_type":"stream"}]},{"cell_type":"code","source":"#min-max normalization\nfor column in nasa.columns: \n    nasa[column] = (nasa[column] - nasa[column].min()) / (nasa[column].max() - nasa[column].min()) ","metadata":{"execution":{"iopub.status.busy":"2024-04-20T18:38:44.879448Z","iopub.execute_input":"2024-04-20T18:38:44.879815Z","iopub.status.idle":"2024-04-20T18:38:44.910669Z","shell.execute_reply.started":"2024-04-20T18:38:44.879785Z","shell.execute_reply":"2024-04-20T18:38:44.909460Z"},"trusted":true},"execution_count":10,"outputs":[]},{"cell_type":"code","source":"nasa.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-20T18:38:44.912973Z","iopub.execute_input":"2024-04-20T18:38:44.913717Z","iopub.status.idle":"2024-04-20T18:38:44.945591Z","shell.execute_reply.started":"2024-04-20T18:38:44.913680Z","shell.execute_reply":"2024-04-20T18:38:44.944459Z"},"trusted":true},"execution_count":11,"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"   Absolute Magnitude  Est Dia in KM(min)  Est Dia in KM(max)  \\\n0            0.498567            0.008101            0.008101   \n1            0.484241            0.009311            0.009311   \n2            0.436485            0.014795            0.014795   \n3            0.775549            0.000500            0.000500   \n4            0.498567            0.008101            0.008101   \n\n   Relative Velocity km per hr  Miss Dist.(kilometers)  Orbit ID  \\\n0                     0.130487                0.839102  0.026230   \n1                     0.401336                0.766123  0.032787   \n2                     0.163781                0.101616  0.034426   \n3                     0.244668                0.570624  0.009836   \n4                     0.214576                0.815788  0.039344   \n\n   Orbit Uncertainity  Minimum Orbit Intersection  \\\n0            0.555556                    0.052899   \n1            0.333333                    0.391164   \n2            0.000000                    0.090096   \n3            0.666667                    0.011529   \n4            0.111111                    0.072812   \n\n   Jupiter Tisserand Invariant  Epoch Osculation  ...  Inclination  \\\n0                     0.357007          0.997581  ...     0.079736   \n1                     0.477522          0.997581  ...     0.376677   \n2                     0.345731          0.997581  ...     0.056020   \n3                     0.424220          0.997581  ...     0.104671   \n4                     0.433153          0.997581  ...     0.222555   \n\n   Asc Node Longitude  Orbital Period  Perihelion Distance  Perihelion Arg  \\\n0            0.873489        0.108378             0.596770        0.159035   \n1            0.379866        0.062396             0.522896        0.869714   \n2            0.720954        0.116882             0.713687        0.690049   \n3            0.158852        0.084473             0.740847        0.051949   \n4            0.235139        0.079847             0.727546        0.439619   \n\n   Aphelion Dist  Perihelion Time  Mean Anomaly  Mean Motion  Hazardous  \n0       0.146942         0.922502      0.735825     0.258239        1.0  \n1       0.084790         0.880542      0.482720     0.388713        0.0  \n2       0.142186         0.917790      0.813777     0.242271        1.0  \n3       0.088525         0.892829      0.190984     0.314430        0.0  \n4       0.083102         0.882772      0.375475     0.327805        1.0  \n\n[5 rows x 22 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Absolute Magnitude</th>\n      <th>Est Dia in KM(min)</th>\n      <th>Est Dia in KM(max)</th>\n      <th>Relative Velocity km per hr</th>\n      <th>Miss Dist.(kilometers)</th>\n      <th>Orbit ID</th>\n      <th>Orbit Uncertainity</th>\n      <th>Minimum Orbit Intersection</th>\n      <th>Jupiter Tisserand Invariant</th>\n      <th>Epoch Osculation</th>\n      <th>...</th>\n      <th>Inclination</th>\n      <th>Asc Node Longitude</th>\n      <th>Orbital Period</th>\n      <th>Perihelion Distance</th>\n      <th>Perihelion Arg</th>\n      <th>Aphelion Dist</th>\n      <th>Perihelion Time</th>\n      <th>Mean Anomaly</th>\n      <th>Mean Motion</th>\n      <th>Hazardous</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.498567</td>\n      <td>0.008101</td>\n      <td>0.008101</td>\n      <td>0.130487</td>\n      <td>0.839102</td>\n      <td>0.026230</td>\n      <td>0.555556</td>\n      <td>0.052899</td>\n      <td>0.357007</td>\n      <td>0.997581</td>\n      <td>...</td>\n      <td>0.079736</td>\n      <td>0.873489</td>\n      <td>0.108378</td>\n      <td>0.596770</td>\n      <td>0.159035</td>\n      <td>0.146942</td>\n      <td>0.922502</td>\n      <td>0.735825</td>\n      <td>0.258239</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.484241</td>\n      <td>0.009311</td>\n      <td>0.009311</td>\n      <td>0.401336</td>\n      <td>0.766123</td>\n      <td>0.032787</td>\n      <td>0.333333</td>\n      <td>0.391164</td>\n      <td>0.477522</td>\n      <td>0.997581</td>\n      <td>...</td>\n      <td>0.376677</td>\n      <td>0.379866</td>\n      <td>0.062396</td>\n      <td>0.522896</td>\n      <td>0.869714</td>\n      <td>0.084790</td>\n      <td>0.880542</td>\n      <td>0.482720</td>\n      <td>0.388713</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.436485</td>\n      <td>0.014795</td>\n      <td>0.014795</td>\n      <td>0.163781</td>\n      <td>0.101616</td>\n      <td>0.034426</td>\n      <td>0.000000</td>\n      <td>0.090096</td>\n      <td>0.345731</td>\n      <td>0.997581</td>\n      <td>...</td>\n      <td>0.056020</td>\n      <td>0.720954</td>\n      <td>0.116882</td>\n      <td>0.713687</td>\n      <td>0.690049</td>\n      <td>0.142186</td>\n      <td>0.917790</td>\n      <td>0.813777</td>\n      <td>0.242271</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.775549</td>\n      <td>0.000500</td>\n      <td>0.000500</td>\n      <td>0.244668</td>\n      <td>0.570624</td>\n      <td>0.009836</td>\n      <td>0.666667</td>\n      <td>0.011529</td>\n      <td>0.424220</td>\n      <td>0.997581</td>\n      <td>...</td>\n      <td>0.104671</td>\n      <td>0.158852</td>\n      <td>0.084473</td>\n      <td>0.740847</td>\n      <td>0.051949</td>\n      <td>0.088525</td>\n      <td>0.892829</td>\n      <td>0.190984</td>\n      <td>0.314430</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.498567</td>\n      <td>0.008101</td>\n      <td>0.008101</td>\n      <td>0.214576</td>\n      <td>0.815788</td>\n      <td>0.039344</td>\n      <td>0.111111</td>\n      <td>0.072812</td>\n      <td>0.433153</td>\n      <td>0.997581</td>\n      <td>...</td>\n      <td>0.222555</td>\n      <td>0.235139</td>\n      <td>0.079847</td>\n      <td>0.727546</td>\n      <td>0.439619</td>\n      <td>0.083102</td>\n      <td>0.882772</td>\n      <td>0.375475</td>\n      <td>0.327805</td>\n      <td>1.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 22 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"Before we get into training, we can take a look at the overall value counts of \"Hazardous\" and \"Non-Hazardous\" asteroids.","metadata":{}},{"cell_type":"code","source":"sns.countplot(nasa, x=\"Hazardous\", hue=\"Hazardous\")","metadata":{"execution":{"iopub.status.busy":"2024-04-20T22:22:50.884558Z","iopub.execute_input":"2024-04-20T22:22:50.884980Z","iopub.status.idle":"2024-04-20T22:22:51.189073Z","shell.execute_reply.started":"2024-04-20T22:22:50.884947Z","shell.execute_reply":"2024-04-20T22:22:51.187856Z"},"trusted":true},"execution_count":85,"outputs":[{"execution_count":85,"output_type":"execute_result","data":{"text/plain":"<Axes: xlabel='Hazardous', ylabel='count'>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"Luckily for all of us on Earth, it appears that asteroids are typically much more likely to be considered non-hazardous than they are hazardous. Still, when a asteroid is hazardous, it would be really great if we could correctly classify it - so lets split our data into training and testing sets, and then we can try out some models.","metadata":{}},{"cell_type":"code","source":"nasa_X = nasa.drop(columns = 'Hazardous')\nnasa_y = nasa['Hazardous']\n\nX_train, X_test, y_train, y_test = train_test_split(nasa_X, nasa_y, test_size = .2, random_state = 42)","metadata":{"execution":{"iopub.status.busy":"2024-04-20T18:38:44.950066Z","iopub.execute_input":"2024-04-20T18:38:44.950416Z","iopub.status.idle":"2024-04-20T18:38:44.965963Z","shell.execute_reply.started":"2024-04-20T18:38:44.950387Z","shell.execute_reply":"2024-04-20T18:38:44.964660Z"},"trusted":true},"execution_count":12,"outputs":[]},{"cell_type":"markdown","source":"# Logistic Regression\n\nSince the goal of this project is to determine a binary classification of asteroids - either hazardous or not - logistic regression may be a good fit. We will start by creating a basic logistic regression model, and then evaluating to see if we can improve it further.","metadata":{}},{"cell_type":"code","source":"LogReg = LogisticRegression(solver = 'liblinear')\nLogReg.fit(X_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-04-20T18:38:44.967428Z","iopub.execute_input":"2024-04-20T18:38:44.968249Z","iopub.status.idle":"2024-04-20T18:38:45.013405Z","shell.execute_reply.started":"2024-04-20T18:38:44.968211Z","shell.execute_reply":"2024-04-20T18:38:45.012436Z"},"trusted":true},"execution_count":13,"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"LogisticRegression(solver='liblinear')","text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(solver=&#x27;liblinear&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression(solver=&#x27;liblinear&#x27;)</pre></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"LogReg.score(X_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-04-20T18:38:45.014685Z","iopub.execute_input":"2024-04-20T18:38:45.015387Z","iopub.status.idle":"2024-04-20T18:38:45.037266Z","shell.execute_reply.started":"2024-04-20T18:38:45.015354Z","shell.execute_reply":"2024-04-20T18:38:45.035686Z"},"trusted":true},"execution_count":14,"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"0.9237129901307015"},"metadata":{}}]},{"cell_type":"code","source":"LogReg.score(X_test, y_test)","metadata":{"execution":{"iopub.status.busy":"2024-04-20T18:38:45.039568Z","iopub.execute_input":"2024-04-20T18:38:45.040235Z","iopub.status.idle":"2024-04-20T18:38:45.061849Z","shell.execute_reply.started":"2024-04-20T18:38:45.040186Z","shell.execute_reply":"2024-04-20T18:38:45.059399Z"},"trusted":true},"execution_count":15,"outputs":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"0.9211087420042644"},"metadata":{}}]},{"cell_type":"markdown","source":"This basic model showed to be fairly accurate, even when utilizing mostly defualt parameters. We can now see if we can further improve upon it. To do so we will use GridSearchCV to find the best paramaters. ","metadata":{}},{"cell_type":"code","source":"from sklearn.model_selection import GridSearchCV\n\ngrid_params = {'penalty': ['l1', 'l2', 'elasticnet', 'None'],\n               'C': np.logspace(-4,4,20),\n               'solver': ['lbfgs', 'liblinear', 'newton-cg', 'sag'],\n               'max_iter': [2000, 30000]\n              }\n\ngrid = GridSearchCV(estimator = LogisticRegression(), param_grid = grid_params, cv = 3, error_score = 0.0, verbose = True, n_jobs = -1)\n#'newton-cg','sag', 'saga',","metadata":{"execution":{"iopub.status.busy":"2024-04-20T18:38:45.518725Z","iopub.execute_input":"2024-04-20T18:38:45.519501Z","iopub.status.idle":"2024-04-20T18:38:45.528039Z","shell.execute_reply.started":"2024-04-20T18:38:45.519459Z","shell.execute_reply":"2024-04-20T18:38:45.526683Z"},"trusted":true},"execution_count":17,"outputs":[]},{"cell_type":"code","source":"#some solvers/penalties are incompatible and so fit will throw a lot of warnings. Ignoring them to keep the notebook readable.\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\ngrid.fit(X_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-04-20T18:38:45.529959Z","iopub.execute_input":"2024-04-20T18:38:45.530430Z","iopub.status.idle":"2024-04-20T18:39:43.064741Z","shell.execute_reply.started":"2024-04-20T18:38:45.530387Z","shell.execute_reply":"2024-04-20T18:39:43.063323Z"},"trusted":true},"execution_count":18,"outputs":[{"name":"stdout","text":"Fitting 3 folds for each of 640 candidates, totalling 1920 fits\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/linear_model/_sag.py:350: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/linear_model/_sag.py:350: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n  warnings.warn(\n","output_type":"stream"},{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"GridSearchCV(cv=3, error_score=0.0, estimator=LogisticRegression(), n_jobs=-1,\n             param_grid={'C': array([1.00000000e-04, 2.63665090e-04, 6.95192796e-04, 1.83298071e-03,\n       4.83293024e-03, 1.27427499e-02, 3.35981829e-02, 8.85866790e-02,\n       2.33572147e-01, 6.15848211e-01, 1.62377674e+00, 4.28133240e+00,\n       1.12883789e+01, 2.97635144e+01, 7.84759970e+01, 2.06913808e+02,\n       5.45559478e+02, 1.43844989e+03, 3.79269019e+03, 1.00000000e+04]),\n                         'max_iter': [2000, 30000],\n                         'penalty': ['l1', 'l2', 'elasticnet', 'None'],\n                         'solver': ['lbfgs', 'liblinear', 'newton-cg', 'sag']},\n             verbose=True)","text/html":"<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=3, error_score=0.0, estimator=LogisticRegression(), n_jobs=-1,\n             param_grid={&#x27;C&#x27;: array([1.00000000e-04, 2.63665090e-04, 6.95192796e-04, 1.83298071e-03,\n       4.83293024e-03, 1.27427499e-02, 3.35981829e-02, 8.85866790e-02,\n       2.33572147e-01, 6.15848211e-01, 1.62377674e+00, 4.28133240e+00,\n       1.12883789e+01, 2.97635144e+01, 7.84759970e+01, 2.06913808e+02,\n       5.45559478e+02, 1.43844989e+03, 3.79269019e+03, 1.00000000e+04]),\n                         &#x27;max_iter&#x27;: [2000, 30000],\n                         &#x27;penalty&#x27;: [&#x27;l1&#x27;, &#x27;l2&#x27;, &#x27;elasticnet&#x27;, &#x27;None&#x27;],\n                         &#x27;solver&#x27;: [&#x27;lbfgs&#x27;, &#x27;liblinear&#x27;, &#x27;newton-cg&#x27;, &#x27;sag&#x27;]},\n             verbose=True)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=3, error_score=0.0, estimator=LogisticRegression(), n_jobs=-1,\n             param_grid={&#x27;C&#x27;: array([1.00000000e-04, 2.63665090e-04, 6.95192796e-04, 1.83298071e-03,\n       4.83293024e-03, 1.27427499e-02, 3.35981829e-02, 8.85866790e-02,\n       2.33572147e-01, 6.15848211e-01, 1.62377674e+00, 4.28133240e+00,\n       1.12883789e+01, 2.97635144e+01, 7.84759970e+01, 2.06913808e+02,\n       5.45559478e+02, 1.43844989e+03, 3.79269019e+03, 1.00000000e+04]),\n                         &#x27;max_iter&#x27;: [2000, 30000],\n                         &#x27;penalty&#x27;: [&#x27;l1&#x27;, &#x27;l2&#x27;, &#x27;elasticnet&#x27;, &#x27;None&#x27;],\n                         &#x27;solver&#x27;: [&#x27;lbfgs&#x27;, &#x27;liblinear&#x27;, &#x27;newton-cg&#x27;, &#x27;sag&#x27;]},\n             verbose=True)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"best_log = grid.best_estimator_\n\nbest_log","metadata":{"execution":{"iopub.status.busy":"2024-04-20T18:39:43.066497Z","iopub.execute_input":"2024-04-20T18:39:43.066972Z","iopub.status.idle":"2024-04-20T18:39:43.077060Z","shell.execute_reply.started":"2024-04-20T18:39:43.066938Z","shell.execute_reply":"2024-04-20T18:39:43.075605Z"},"trusted":true},"execution_count":19,"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"LogisticRegression(C=1438.44988828766, max_iter=2000, penalty='l1',\n                   solver='liblinear')","text/html":"<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(C=1438.44988828766, max_iter=2000, penalty=&#x27;l1&#x27;,\n                   solver=&#x27;liblinear&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" checked><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression(C=1438.44988828766, max_iter=2000, penalty=&#x27;l1&#x27;,\n                   solver=&#x27;liblinear&#x27;)</pre></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"best_log.score(X_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-04-20T18:39:43.078988Z","iopub.execute_input":"2024-04-20T18:39:43.079463Z","iopub.status.idle":"2024-04-20T18:39:43.104571Z","shell.execute_reply.started":"2024-04-20T18:39:43.079417Z","shell.execute_reply":"2024-04-20T18:39:43.102995Z"},"trusted":true},"execution_count":20,"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"0.9597225926913844"},"metadata":{}}]},{"cell_type":"code","source":"best_log.score(X_test, y_test)","metadata":{"execution":{"iopub.status.busy":"2024-04-20T18:39:43.112105Z","iopub.execute_input":"2024-04-20T18:39:43.116221Z","iopub.status.idle":"2024-04-20T18:39:43.140043Z","shell.execute_reply.started":"2024-04-20T18:39:43.116151Z","shell.execute_reply":"2024-04-20T18:39:43.138533Z"},"trusted":true},"execution_count":21,"outputs":[{"execution_count":21,"output_type":"execute_result","data":{"text/plain":"0.9498933901918977"},"metadata":{}}]},{"cell_type":"markdown","source":"The result of our new logistic regression model is an even more accurate model. This model has an accuracy of 95%, so it appears to be performing quite well. We can additionally see if other supervised learning methods might provide even more accurate results.","metadata":{}},{"cell_type":"markdown","source":"## Decision Trees\n\nAnother method that I believe could be well suited for this problem is a decision tree. Below we will train a decision tree using the same X_train and y_train data and then examine the results.","metadata":{}},{"cell_type":"code","source":"from sklearn.tree import DecisionTreeClassifier\n\ndtree = DecisionTreeClassifier()\n\ndtree.fit(X_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-04-20T19:05:59.649858Z","iopub.execute_input":"2024-04-20T19:05:59.650356Z","iopub.status.idle":"2024-04-20T19:05:59.687815Z","shell.execute_reply.started":"2024-04-20T19:05:59.650320Z","shell.execute_reply":"2024-04-20T19:05:59.686667Z"},"trusted":true},"execution_count":35,"outputs":[{"execution_count":35,"output_type":"execute_result","data":{"text/plain":"DecisionTreeClassifier()","text/html":"<style>#sk-container-id-6 {color: black;background-color: white;}#sk-container-id-6 pre{padding: 0;}#sk-container-id-6 div.sk-toggleable {background-color: white;}#sk-container-id-6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-6 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-6 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-6 div.sk-item {position: relative;z-index: 1;}#sk-container-id-6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-6 div.sk-item::before, #sk-container-id-6 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-6 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-6 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-6 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-6 div.sk-label-container {text-align: center;}#sk-container-id-6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-6 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-6\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-8\" type=\"checkbox\" checked><label for=\"sk-estimator-id-8\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier()</pre></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"dtree.score(X_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-04-20T19:06:01.123376Z","iopub.execute_input":"2024-04-20T19:06:01.123781Z","iopub.status.idle":"2024-04-20T19:06:01.137790Z","shell.execute_reply.started":"2024-04-20T19:06:01.123750Z","shell.execute_reply":"2024-04-20T19:06:01.136200Z"},"trusted":true},"execution_count":36,"outputs":[{"execution_count":36,"output_type":"execute_result","data":{"text/plain":"1.0"},"metadata":{}}]},{"cell_type":"code","source":"dtree.score(X_test, y_test)","metadata":{"execution":{"iopub.status.busy":"2024-04-20T19:06:02.506423Z","iopub.execute_input":"2024-04-20T19:06:02.506859Z","iopub.status.idle":"2024-04-20T19:06:02.519557Z","shell.execute_reply.started":"2024-04-20T19:06:02.506822Z","shell.execute_reply":"2024-04-20T19:06:02.518226Z"},"trusted":true},"execution_count":37,"outputs":[{"execution_count":37,"output_type":"execute_result","data":{"text/plain":"0.9957356076759062"},"metadata":{}}]},{"cell_type":"markdown","source":"The decision tree model appears to be even more accurate than our best logistic regression model with an accuracy score of 99.5%.\n\nWe can further visualize how the model is working by creating a confusion matrix, as well as looking at a classification report.","metadata":{}},{"cell_type":"code","source":"from sklearn.metrics import confusion_matrix\n\ny_pred = dtree.predict(X_test)\nprint(confusion_matrix(y_test, y_pred))","metadata":{"execution":{"iopub.status.busy":"2024-04-20T19:06:05.514287Z","iopub.execute_input":"2024-04-20T19:06:05.514674Z","iopub.status.idle":"2024-04-20T19:06:05.528610Z","shell.execute_reply.started":"2024-04-20T19:06:05.514645Z","shell.execute_reply":"2024-04-20T19:06:05.527345Z"},"trusted":true},"execution_count":38,"outputs":[{"name":"stdout","text":"[[788   3]\n [  1 146]]\n","output_type":"stream"}]},{"cell_type":"code","source":"from sklearn.metrics import classification_report\n\nprint(classification_report(y_test, y_pred))","metadata":{"execution":{"iopub.status.busy":"2024-04-20T19:06:08.226233Z","iopub.execute_input":"2024-04-20T19:06:08.227338Z","iopub.status.idle":"2024-04-20T19:06:08.247286Z","shell.execute_reply.started":"2024-04-20T19:06:08.227301Z","shell.execute_reply":"2024-04-20T19:06:08.245907Z"},"trusted":true},"execution_count":39,"outputs":[{"name":"stdout","text":"              precision    recall  f1-score   support\n\n         0.0       1.00      1.00      1.00       791\n         1.0       0.98      0.99      0.99       147\n\n    accuracy                           1.00       938\n   macro avg       0.99      0.99      0.99       938\nweighted avg       1.00      1.00      1.00       938\n\n","output_type":"stream"}]},{"cell_type":"markdown","source":"Overall, our decision tree model appears to be performing quite well, with only 4 misclassifications in our test data set. It would also be interesting to see which features are most important to our decision tree, which we can visualize using feature_importances_","metadata":{}},{"cell_type":"code","source":"pd.DataFrame({'col_name': dtree.feature_importances_}, index=X_train.columns).sort_values(by='col_name', ascending=False)","metadata":{"execution":{"iopub.status.busy":"2024-04-20T19:06:10.436069Z","iopub.execute_input":"2024-04-20T19:06:10.436480Z","iopub.status.idle":"2024-04-20T19:06:10.450036Z","shell.execute_reply.started":"2024-04-20T19:06:10.436448Z","shell.execute_reply":"2024-04-20T19:06:10.449203Z"},"trusted":true},"execution_count":40,"outputs":[{"execution_count":40,"output_type":"execute_result","data":{"text/plain":"                             col_name\nAbsolute Magnitude           0.797631\nMinimum Orbit Intersection   0.192581\nEst Dia in KM(min)           0.004395\nOrbit ID                     0.002565\nMean Motion                  0.001860\nEccentricity                 0.000866\nEst Dia in KM(max)           0.000102\nMiss Dist.(kilometers)       0.000000\nOrbit Uncertainity           0.000000\nRelative Velocity km per hr  0.000000\nJupiter Tisserand Invariant  0.000000\nEpoch Osculation             0.000000\nSemi Major Axis              0.000000\nInclination                  0.000000\nAsc Node Longitude           0.000000\nOrbital Period               0.000000\nPerihelion Distance          0.000000\nPerihelion Arg               0.000000\nAphelion Dist                0.000000\nPerihelion Time              0.000000\nMean Anomaly                 0.000000","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>col_name</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Absolute Magnitude</th>\n      <td>0.797631</td>\n    </tr>\n    <tr>\n      <th>Minimum Orbit Intersection</th>\n      <td>0.192581</td>\n    </tr>\n    <tr>\n      <th>Est Dia in KM(min)</th>\n      <td>0.004395</td>\n    </tr>\n    <tr>\n      <th>Orbit ID</th>\n      <td>0.002565</td>\n    </tr>\n    <tr>\n      <th>Mean Motion</th>\n      <td>0.001860</td>\n    </tr>\n    <tr>\n      <th>Eccentricity</th>\n      <td>0.000866</td>\n    </tr>\n    <tr>\n      <th>Est Dia in KM(max)</th>\n      <td>0.000102</td>\n    </tr>\n    <tr>\n      <th>Miss Dist.(kilometers)</th>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>Orbit Uncertainity</th>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>Relative Velocity km per hr</th>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>Jupiter Tisserand Invariant</th>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>Epoch Osculation</th>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>Semi Major Axis</th>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>Inclination</th>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>Asc Node Longitude</th>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>Orbital Period</th>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>Perihelion Distance</th>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>Perihelion Arg</th>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>Aphelion Dist</th>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>Perihelion Time</th>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>Mean Anomaly</th>\n      <td>0.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"This shows that the decision tree is heavily weighted by the absolute magnitude of an asteroid and its minimum orbit intersection, while many of the other features have a very low importance. This intuitively makes sense, as the what might make an asteroid hazardous are its size and its distance to impact.\n\nAccording to NASA the Absolute Magnitude of an asteroid is defined as \"An asteroid’s absolute magnitude is the visual magnitude an observer would record if the asteroid were placed 1 Astronomical Unit (au) away, and 1 au from the Sun and at a zero phase angle.\"\n\nAccording to Wikipedia, Minimum Orbit Intersection is defined by the following:\n\n\"Minimum orbit intersection distance (MOID) is a measure used in astronomy to assess potential close approaches and collision risks between astronomical objects. It is defined as the distance between the closest points of the osculating orbits of two bodies.\"\n\nThis makes a lot of sense that these 2 features have the greatest importance, as they essentially represent how large the asteroid appears, and the risk of impact.","metadata":{}},{"cell_type":"markdown","source":"Our default tree uses Gini as the criterion, and is very accurate. It might also be interesting to see if using entropy significantly changes the results.","metadata":{}},{"cell_type":"code","source":"entropy_tree = DecisionTreeClassifier(criterion = \"entropy\")\nentropy_tree.fit(X_train, y_train)\n\nentropy_tree.score(X_test, y_test)","metadata":{"execution":{"iopub.status.busy":"2024-04-20T21:05:17.358377Z","iopub.execute_input":"2024-04-20T21:05:17.358849Z","iopub.status.idle":"2024-04-20T21:05:17.399793Z","shell.execute_reply.started":"2024-04-20T21:05:17.358813Z","shell.execute_reply":"2024-04-20T21:05:17.398490Z"},"trusted":true},"execution_count":42,"outputs":[{"execution_count":42,"output_type":"execute_result","data":{"text/plain":"0.9925373134328358"},"metadata":{}}]},{"cell_type":"code","source":"y_pred = entropy_tree.predict(X_test)\nprint(confusion_matrix(y_test, y_pred))","metadata":{"execution":{"iopub.status.busy":"2024-04-20T21:06:53.553851Z","iopub.execute_input":"2024-04-20T21:06:53.554477Z","iopub.status.idle":"2024-04-20T21:06:53.571493Z","shell.execute_reply.started":"2024-04-20T21:06:53.554430Z","shell.execute_reply":"2024-04-20T21:06:53.570069Z"},"trusted":true},"execution_count":43,"outputs":[{"name":"stdout","text":"[[789   2]\n [  5 142]]\n","output_type":"stream"}]},{"cell_type":"code","source":"print(classification_report(y_test, y_pred))","metadata":{"execution":{"iopub.status.busy":"2024-04-20T21:07:13.231499Z","iopub.execute_input":"2024-04-20T21:07:13.232071Z","iopub.status.idle":"2024-04-20T21:07:13.250850Z","shell.execute_reply.started":"2024-04-20T21:07:13.232029Z","shell.execute_reply":"2024-04-20T21:07:13.249326Z"},"trusted":true},"execution_count":44,"outputs":[{"name":"stdout","text":"              precision    recall  f1-score   support\n\n         0.0       0.99      1.00      1.00       791\n         1.0       0.99      0.97      0.98       147\n\n    accuracy                           0.99       938\n   macro avg       0.99      0.98      0.99       938\nweighted avg       0.99      0.99      0.99       938\n\n","output_type":"stream"}]},{"cell_type":"code","source":"pd.DataFrame({'col_name': entropy_tree.feature_importances_}, index=X_train.columns).sort_values(by='col_name', ascending=False)","metadata":{"execution":{"iopub.status.busy":"2024-04-20T21:08:18.641247Z","iopub.execute_input":"2024-04-20T21:08:18.641805Z","iopub.status.idle":"2024-04-20T21:08:18.659537Z","shell.execute_reply.started":"2024-04-20T21:08:18.641768Z","shell.execute_reply":"2024-04-20T21:08:18.657930Z"},"trusted":true},"execution_count":45,"outputs":[{"execution_count":45,"output_type":"execute_result","data":{"text/plain":"                             col_name\nEst Dia in KM(min)           0.671445\nMinimum Orbit Intersection   0.274558\nAbsolute Magnitude           0.032076\nMean Anomaly                 0.012036\nMiss Dist.(kilometers)       0.003419\nAphelion Dist                0.002857\nEst Dia in KM(max)           0.002156\nPerihelion Time              0.001454\nAsc Node Longitude           0.000000\nPerihelion Arg               0.000000\nPerihelion Distance          0.000000\nOrbital Period               0.000000\nEccentricity                 0.000000\nInclination                  0.000000\nSemi Major Axis              0.000000\nEpoch Osculation             0.000000\nJupiter Tisserand Invariant  0.000000\nOrbit Uncertainity           0.000000\nOrbit ID                     0.000000\nRelative Velocity km per hr  0.000000\nMean Motion                  0.000000","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>col_name</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Est Dia in KM(min)</th>\n      <td>0.671445</td>\n    </tr>\n    <tr>\n      <th>Minimum Orbit Intersection</th>\n      <td>0.274558</td>\n    </tr>\n    <tr>\n      <th>Absolute Magnitude</th>\n      <td>0.032076</td>\n    </tr>\n    <tr>\n      <th>Mean Anomaly</th>\n      <td>0.012036</td>\n    </tr>\n    <tr>\n      <th>Miss Dist.(kilometers)</th>\n      <td>0.003419</td>\n    </tr>\n    <tr>\n      <th>Aphelion Dist</th>\n      <td>0.002857</td>\n    </tr>\n    <tr>\n      <th>Est Dia in KM(max)</th>\n      <td>0.002156</td>\n    </tr>\n    <tr>\n      <th>Perihelion Time</th>\n      <td>0.001454</td>\n    </tr>\n    <tr>\n      <th>Asc Node Longitude</th>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>Perihelion Arg</th>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>Perihelion Distance</th>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>Orbital Period</th>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>Eccentricity</th>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>Inclination</th>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>Semi Major Axis</th>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>Epoch Osculation</th>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>Jupiter Tisserand Invariant</th>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>Orbit Uncertainity</th>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>Orbit ID</th>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>Relative Velocity km per hr</th>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>Mean Motion</th>\n      <td>0.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"Interestingly, the tree using entropy has quite different feature importance, placing more importance on the diameter of the asteroid, and much less on the absolute magnitude. This model also appears to be quite accurate, and intuitively the feature importance still makes sense, but it appears that for this problem Gini seems to result in a slightly more accurate model.","metadata":{}},{"cell_type":"markdown","source":"## Random Forest\n\nAlthough our decision tree on its own was quite accurate, we can additionally see if using a random forest classifier might further improve our results.","metadata":{}},{"cell_type":"code","source":"from sklearn.ensemble import RandomForestClassifier\n\nforest = RandomForestClassifier()\n\nforest.fit(X_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-04-20T22:10:42.094954Z","iopub.execute_input":"2024-04-20T22:10:42.095428Z","iopub.status.idle":"2024-04-20T22:10:42.797460Z","shell.execute_reply.started":"2024-04-20T22:10:42.095392Z","shell.execute_reply":"2024-04-20T22:10:42.796211Z"},"trusted":true},"execution_count":79,"outputs":[{"execution_count":79,"output_type":"execute_result","data":{"text/plain":"RandomForestClassifier()","text/html":"<style>#sk-container-id-14 {color: black;background-color: white;}#sk-container-id-14 pre{padding: 0;}#sk-container-id-14 div.sk-toggleable {background-color: white;}#sk-container-id-14 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-14 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-14 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-14 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-14 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-14 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-14 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-14 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-14 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-14 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-14 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-14 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-14 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-14 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-14 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-14 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-14 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-14 div.sk-item {position: relative;z-index: 1;}#sk-container-id-14 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-14 div.sk-item::before, #sk-container-id-14 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-14 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-14 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-14 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-14 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-14 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-14 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-14 div.sk-label-container {text-align: center;}#sk-container-id-14 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-14 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-14\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-20\" type=\"checkbox\" checked><label for=\"sk-estimator-id-20\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"forest.score(X_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-04-20T22:10:44.234704Z","iopub.execute_input":"2024-04-20T22:10:44.235659Z","iopub.status.idle":"2024-04-20T22:10:44.286313Z","shell.execute_reply.started":"2024-04-20T22:10:44.235611Z","shell.execute_reply":"2024-04-20T22:10:44.284917Z"},"trusted":true},"execution_count":80,"outputs":[{"execution_count":80,"output_type":"execute_result","data":{"text/plain":"1.0"},"metadata":{}}]},{"cell_type":"code","source":"forest.score(X_test, y_test)","metadata":{"execution":{"iopub.status.busy":"2024-04-20T22:10:45.381289Z","iopub.execute_input":"2024-04-20T22:10:45.381736Z","iopub.status.idle":"2024-04-20T22:10:45.412911Z","shell.execute_reply.started":"2024-04-20T22:10:45.381701Z","shell.execute_reply":"2024-04-20T22:10:45.411801Z"},"trusted":true},"execution_count":81,"outputs":[{"execution_count":81,"output_type":"execute_result","data":{"text/plain":"0.9957356076759062"},"metadata":{}}]},{"cell_type":"code","source":"param_grid = {\n    'criterion' : ['gini', 'entropy', 'log_loss'],\n    'n_estimators' : [int(x) for x in np.linspace(start = 10, stop = 100, num = 10)],\n    'max_features' : ['sqrt', 'log2'],\n    'max_depth' : [2,3, 4, None],\n    'min_samples_split' : [2, 5],\n    'min_samples_leaf' :  [1, 2, 4],\n    'bootstrap' : [True, False]\n}","metadata":{"execution":{"iopub.status.busy":"2024-04-20T21:51:56.043078Z","iopub.execute_input":"2024-04-20T21:51:56.043565Z","iopub.status.idle":"2024-04-20T21:51:56.051092Z","shell.execute_reply.started":"2024-04-20T21:51:56.043529Z","shell.execute_reply":"2024-04-20T21:51:56.049618Z"},"trusted":true},"execution_count":69,"outputs":[]},{"cell_type":"code","source":"rf_grid = GridSearchCV(estimator = forest, param_grid = param_grid, cv = 3, verbose = True, n_jobs = -1)\n","metadata":{"execution":{"iopub.status.busy":"2024-04-20T21:51:56.756777Z","iopub.execute_input":"2024-04-20T21:51:56.757179Z","iopub.status.idle":"2024-04-20T21:51:56.762689Z","shell.execute_reply.started":"2024-04-20T21:51:56.757147Z","shell.execute_reply":"2024-04-20T21:51:56.761363Z"},"trusted":true},"execution_count":70,"outputs":[]},{"cell_type":"code","source":"rf_grid.fit(X_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-04-20T21:51:58.141923Z","iopub.execute_input":"2024-04-20T21:51:58.142345Z","iopub.status.idle":"2024-04-20T22:07:39.903989Z","shell.execute_reply.started":"2024-04-20T21:51:58.142313Z","shell.execute_reply":"2024-04-20T22:07:39.902280Z"},"trusted":true},"execution_count":71,"outputs":[{"name":"stdout","text":"Fitting 3 folds for each of 2880 candidates, totalling 8640 fits\n","output_type":"stream"},{"execution_count":71,"output_type":"execute_result","data":{"text/plain":"GridSearchCV(cv=3, estimator=RandomForestClassifier(), n_jobs=-1,\n             param_grid={'bootstrap': [True, False],\n                         'criterion': ['gini', 'entropy', 'log_loss'],\n                         'max_depth': [2, 3, 4, None],\n                         'max_features': ['sqrt', 'log2'],\n                         'min_samples_leaf': [1, 2, 4],\n                         'min_samples_split': [2, 5],\n                         'n_estimators': [10, 20, 30, 40, 50, 60, 70, 80, 90,\n                                          100]},\n             verbose=True)","text/html":"<style>#sk-container-id-11 {color: black;background-color: white;}#sk-container-id-11 pre{padding: 0;}#sk-container-id-11 div.sk-toggleable {background-color: white;}#sk-container-id-11 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-11 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-11 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-11 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-11 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-11 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-11 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-11 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-11 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-11 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-11 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-11 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-11 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-11 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-11 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-11 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-11 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-11 div.sk-item {position: relative;z-index: 1;}#sk-container-id-11 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-11 div.sk-item::before, #sk-container-id-11 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-11 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-11 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-11 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-11 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-11 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-11 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-11 div.sk-label-container {text-align: center;}#sk-container-id-11 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-11 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-11\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=3, estimator=RandomForestClassifier(), n_jobs=-1,\n             param_grid={&#x27;bootstrap&#x27;: [True, False],\n                         &#x27;criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;, &#x27;log_loss&#x27;],\n                         &#x27;max_depth&#x27;: [2, 3, 4, None],\n                         &#x27;max_features&#x27;: [&#x27;sqrt&#x27;, &#x27;log2&#x27;],\n                         &#x27;min_samples_leaf&#x27;: [1, 2, 4],\n                         &#x27;min_samples_split&#x27;: [2, 5],\n                         &#x27;n_estimators&#x27;: [10, 20, 30, 40, 50, 60, 70, 80, 90,\n                                          100]},\n             verbose=True)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-15\" type=\"checkbox\" ><label for=\"sk-estimator-id-15\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=3, estimator=RandomForestClassifier(), n_jobs=-1,\n             param_grid={&#x27;bootstrap&#x27;: [True, False],\n                         &#x27;criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;, &#x27;log_loss&#x27;],\n                         &#x27;max_depth&#x27;: [2, 3, 4, None],\n                         &#x27;max_features&#x27;: [&#x27;sqrt&#x27;, &#x27;log2&#x27;],\n                         &#x27;min_samples_leaf&#x27;: [1, 2, 4],\n                         &#x27;min_samples_split&#x27;: [2, 5],\n                         &#x27;n_estimators&#x27;: [10, 20, 30, 40, 50, 60, 70, 80, 90,\n                                          100]},\n             verbose=True)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-16\" type=\"checkbox\" ><label for=\"sk-estimator-id-16\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-17\" type=\"checkbox\" ><label for=\"sk-estimator-id-17\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"best_rf = rf_grid.best_estimator_\n\nbest_rf","metadata":{"execution":{"iopub.status.busy":"2024-04-20T22:10:00.875104Z","iopub.execute_input":"2024-04-20T22:10:00.875622Z","iopub.status.idle":"2024-04-20T22:10:00.886278Z","shell.execute_reply.started":"2024-04-20T22:10:00.875583Z","shell.execute_reply":"2024-04-20T22:10:00.884999Z"},"trusted":true},"execution_count":74,"outputs":[{"execution_count":74,"output_type":"execute_result","data":{"text/plain":"RandomForestClassifier(min_samples_split=5, n_estimators=70)","text/html":"<style>#sk-container-id-12 {color: black;background-color: white;}#sk-container-id-12 pre{padding: 0;}#sk-container-id-12 div.sk-toggleable {background-color: white;}#sk-container-id-12 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-12 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-12 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-12 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-12 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-12 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-12 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-12 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-12 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-12 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-12 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-12 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-12 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-12 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-12 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-12 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-12 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-12 div.sk-item {position: relative;z-index: 1;}#sk-container-id-12 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-12 div.sk-item::before, #sk-container-id-12 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-12 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-12 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-12 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-12 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-12 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-12 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-12 div.sk-label-container {text-align: center;}#sk-container-id-12 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-12 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-12\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier(min_samples_split=5, n_estimators=70)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-18\" type=\"checkbox\" checked><label for=\"sk-estimator-id-18\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier(min_samples_split=5, n_estimators=70)</pre></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"best_rf.score(X_test, y_test)","metadata":{"execution":{"iopub.status.busy":"2024-04-20T22:09:23.040536Z","iopub.execute_input":"2024-04-20T22:09:23.041065Z","iopub.status.idle":"2024-04-20T22:09:23.071829Z","shell.execute_reply.started":"2024-04-20T22:09:23.041027Z","shell.execute_reply":"2024-04-20T22:09:23.070309Z"},"trusted":true},"execution_count":73,"outputs":[{"execution_count":73,"output_type":"execute_result","data":{"text/plain":"0.9957356076759062"},"metadata":{}}]},{"cell_type":"markdown","source":"Overall, the default random forest model does very well. Trying to optimize it does not appear to make any type of significant difference, which is not surprising since it is already so accurate.","metadata":{}},{"cell_type":"markdown","source":"## Conclusion\n\nThis project demonstrated how supervised learning techniques can be used to classify asteroids as hazerdous or not hazerdous. To do so, I experimented with 3 different approaches: logistic regression, decision tree, and random forest. The logistic regression is a natural choice for this problem because it is a binary classification, and ultimately the logistic regression proved to work fairly well.\n\nThe decision tree and random forest models were shown to provide even greater accuracy. While typically random forests are often an improvement over decision trees, with this data the decision tree shows to be incredibly accurate on its own. This is likely due to a relatively simple data set, with a classification that can be accurately determined mostly by a couple key characteristics.","metadata":{}},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}